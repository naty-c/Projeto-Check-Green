{
  "swagger": "2.0",
  "info": {
    "title": "API Documentation",
    "description": "Documentation for my API with users and places",
    "version": "1.0.0"
  },
  "host": "localhost:3033",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKei",
      "in": "header",
      "name": "authorization",
      "description": "Authentication by Token"
    }
  },
  "paths": {
    "/users/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create new user",
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List all users",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List user by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "description": "This endpoint will list a user by ID",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Yuki Cross"
                },
                "email": {
                  "type": "string",
                  "example": "yuki@email.com"
                },
                "password": {
                  "type": "string",
                  "example": "yukipassword"
                },
                "gender": {
                  "type": "string",
                  "example": "Female"
                },
                "birthday": {
                  "type": "string",
                  "example": "2008-08-08"
                },
                "CPF": {
                  "type": "string",
                  "example": "88888888888"
                },
                "address": {
                  "type": "string",
                  "example": "Street 08, 08 - VN"
                },
                "phone": {
                  "type": "string",
                  "example": "4888888888"
                }
              },
              "required": [
                "name",
                "email",
                "password",
                "gender",
                "birthday",
                "CPF",
                "address",
                "phone"
              ]
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "description": "This endpoint will update a user by ID",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Yuki Soma"
                },
                "email": {
                  "type": "string",
                  "example": "yukisoma@email.com"
                },
                "password": {
                  "type": "string",
                  "example": "yukisomapassword"
                },
                "gender": {
                  "type": "string",
                  "example": "Male"
                },
                "birthday": {
                  "type": "string",
                  "example": "2020-10-20"
                },
                "CPF": {
                  "type": "string",
                  "example": "20202020202"
                },
                "address": {
                  "type": "string",
                  "example": "Street 20, 20 - FB"
                },
                "phone": {
                  "type": "string",
                  "example": "4820202020"
                }
              },
              "required": [
                "name",
                "email",
                "password",
                "gender",
                "birthday",
                "CPF",
                "address",
                "phone"
              ]
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/places/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "location": {
                  "example": "any"
                },
                "latitude": {
                  "example": "any"
                },
                "longitude": {
                  "example": "any"
                },
                "accessibility": {
                  "example": "any"
                },
                "category": {
                  "example": "any"
                },
                "rating": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/places/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "location": {
                  "example": "any"
                },
                "latitude": {
                  "example": "any"
                },
                "longitude": {
                  "example": "any"
                },
                "accessibility": {
                  "example": "any"
                },
                "category": {
                  "example": "any"
                },
                "rating": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/login/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "security": [
    {
      "apiKeyAuth": []
    }
  ]
}